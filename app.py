# -*- coding: utf-8 -*-
"""app

Automatically generated by Colab.

Original file is located at
    https://colab.research.google.com/drive/1C-pRGvhlyutUt6K56bPbmBUXtJp_do6J
"""

from google.colab import drive
drive.mount('/content/mydrive')

model.save('/content/mydrive/MyDrive/brain_tumor_model.h5')  # Save after training

import tensorflow as tf

model_path = "/content/mydrive/MyDrive/brain_tumor_model.h5"
model = tf.keras.models.load_model(model_path)

print("Model loaded successfully!")

import subprocess
subprocess.run(["pip", "install", "gradio"])

import gradio as gr
import numpy as np
import cv2

# Define class names based on your dataset
categories = ["pituitary", "notumor", "meningioma", "glioma"]

# Function to process and predict images
def predict_brain_tumor(image):
    image = cv2.resize(image, (128, 128))  # Resize to match model input
    image = image / 255.0  # Normalize pixel values
    image = np.expand_dims(image, axis=0)  # Add batch dimension

    # Get predictions
    prediction = model.predict(image)
    predicted_class = categories[np.argmax(prediction)]
    confidence = float(np.max(prediction) * 100)

    return f"Prediction: {predicted_class} (Confidence: {confidence:.2f}%)"

# Create Gradio UI
interface = gr.Interface(
    fn=predict_brain_tumor,
    inputs=gr.Image(type="numpy"),
    outputs="text",
    title="Brain Tumor Detection",
    description="Upload an MRI scan to check for brain tumors."
)

# Run the Gradio app
interface.launch(share=True)



